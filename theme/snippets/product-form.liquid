{%- comment -%}
Those are the option names for which we automatically detect swatch. For the color, we use them to display a swatch, while
for size, we use it to display a size chart (if applicable)
{%- endcomment -%}

{%- assign color_label = 'color,colour,couleur,colore,farbe,색,色,färg,farve' | split: ',' -%}
{%- assign size_label = 'size,taille,bröße,tamanho,tamaño,koko,サイズ' | split: ',' -%}

{%- assign size_chart_page = '' -%}
{%- assign product_popovers = '' -%}
{%- assign show_option_label = false -%}

{%- assign selected_variant = product.selected_or_first_available_variant -%}

{%- assign available_variants = '' -%}
{%- for variant_item in product.variants -%}
  {%- if variant_item.available -%}
    {%- assign available_variants = available_variants | append: variant_item.title | append: '|' -%}
  {%- endif -%}
{%- endfor -%}
<!--variants {{ available_variants }} --> 
{%- assign available_variants = available_variants | split: '|' -%}
<!--variants {{ available_variants | json }} --> 

{%- form 'product', product, class: 'ProductForm' -%}

  <div class="ProductForm__Variants">
    <div class="OptionsWrapper">
      {%- unless product.has_only_default_variant -%}
        {%- for option in product.options_with_values -%}
          {%- assign downcase_option = option.name | downcase -%}

          {%- unless size_label contains downcase_option or downcase_option=='title' -%}
            {%- if section.settings.selector_mode == 'block' or color_label contains downcase_option and section.settings.show_color_swatch -%}
              {%- assign show_option_label = true -%}
            {%- endif -%}
          {%- endunless -%}
        {%- endfor -%}

        {%- for option in product.options_with_values -%}
          {%- assign downcase_option = option.name | downcase -%}
          {%- unless downcase_option == 'title' -%}
            {%- capture popover_id -%}popover-{{ product.id }}-{{ section.id }}-{{ option.name | handle }}{%- endcapture -%}

            <div class="ProductForm__Option {% if show_option_label %}ProductForm__Option--labelled{% endif %} option-{{downcase_option}}">
              {%- if show_option_label -%}
                {%- assign size_chart_page = pages['size-chart'] -%}

                <span class="ProductForm__Label">
                  {{ option.name }}:

                  {% if color_label contains downcase_option and section.settings.show_color_swatch %}
                    <span class="ProductForm__SelectedValue">{{ option.selected_value }}</span>
                  {% endif %}

                  {%- if size_label contains downcase_option and size_chart_page != empty -%}
                    <button type="button" class="ProductForm__LabelLink Link Text--subdued" data-action="open-modal" aria-controls="modal-{{ size_chart_page.handle }}">
                    {{- 'product.form.size_chart' | t -}}
                  </button>
                  {%- endif -%}
                </span>
              {%- endif -%}

              {%- if color_label contains downcase_option and section.settings.show_color_swatch -%}
                <ul class="ColorSwatchList HorizontalList HorizontalList--spacingTight">
                  {%- for value in option.values -%}
                    {%- assign downcase_value = value | downcase -%}

                    <li class="HorizontalList__Item">
                      {%- assign color_swatch_name = value | handle | append: '.png' -%}
                      {%- assign color_swatch_image = images[color_swatch_name] -%}

                      <input id="option-{{ section.id }}-{{ forloop.parentloop.index0 }}-{{ forloop.index0 }}" class="ColorSwatch__Radio" type="radio" name="option-{{ forloop.parentloop.index0 }}" value="{{ value | escape }}" {% if value == option.selected_value %}checked="checked"{% endif %} data-option-position="{{ option.position }}">
                      <label for="option-{{ section.id }}-{{ forloop.parentloop.index0 }}-{{ forloop.index0 }}" class="ColorSwatch ColorSwatch--large {% if downcase_value == 'white' %}ColorSwatch--white{% endif %}" data-tooltip="{{ value | escape }}" style="background-color: {{ value | replace: ' ', '' | downcase }}; {% if color_swatch_image != blank %}background-image: url({{ color_swatch_image | img_url: '64x64' }}){% endif %}">
                        <span class="u-visually-hidden">{{ value }}</span>
                      </label>
                    </li>
                  {%- endfor -%}
                </ul>
              {%comment%}{%- elsif section.settings.selector_mode == 'block' and size_label contains downcase_option -%}{%endcomment%}
              {%- elsif size_label contains downcase_option -%}
                {%- capture options_list -%}
                  {%- if product.tags contains 'sizes-pt-one-size' -%}
                    sizes-pt-one-size|One Size|One Size
                  {%- elsif product.type contains 'Baby' -%}
                    sizes-pt-6m|6M|6M::sizes-pt-9m|9M|9M::sizes-pt-12m|12M|12M::sizes-pt-18m|18M|18M
                  {%- elsif product.tags contains 'kids-subtype-pt-bloomer' or product.tags contains 'kids-subtype-pt-little-boys' -%}
                    sizes-pt-1t|1T|1T::sizes-pt-2t|2T|2T::sizes-pt-3t|3T|3T
                  {%- elsif product.tags contains 'kids-subtype-pt-girasol' or product.tags contains 'kids-subtype-pt-carmen' or product.tags contains 'kids-luisa-dress' -%}
                    sizes-pt-1t|1T|1T::sizes-pt-2t|2T|2T::sizes-pt-3t|3T|3T::sizes-pt-4t|4T|4T
                  {%- elsif product.tags contains 'kids-subtype-pt-florecita' -%}
                    sizes-pt-4t|4T|4T::sizes-pt-6y|6Y|6Y::sizes-pt-8y|8Y|8Y::sizes-pt-10y|10Y|10Y::sizes-pt-12y|12Y|12Y
                  {%- elsif product.type == 'Kids T-Shirt' -%}
                    sizes-pt-4t|4T|4T::sizes-pt-6y|6Y|6Y::sizes-pt-8y|8Y|8Y::sizes-pt-10y|10Y|10Y::sizes-pt-12y|12Y|12Y
                  {%- elsif product.type contains 'Plus Size' -%}
                    sizes-pt-1x|1X|1X::sizes-pt-2x|2X|2X
                  {%- elsif product.type contains 'Childrens' -%}
                    sizes-pt-12-18m|12-18M|12-18M::sizes-pt-18-24m|18-24M|18-24M::sizes-pt-2t|2T|2T::sizes-pt-4t|4T|4T::sizes-pt-6y|6Y|6Y::sizes-pt-8y|8Y|8Y::sizes-pt-10y|10Y|10Y::sizes-pt-12y|12Y|12Y
                  {%- else -%}
                    sizes-pt-extra-small|XS|Extra Small::sizes-pt-small|S|Small::sizes-pt-medium|M|Medium::sizes-pt-large|L|Large::sizes-pt-extra-large|XL|Extra Large
                  {%- endif -%}
                {%- endcapture -%}
                {%- assign options_array = options_list | split: '::' -%}
                <ul class="SizeSwatchList SizeSelector HorizontalList {% if product.tags contains 'sizes-pt-one-size'%}Size__OneSize{% endif %}">
                  
                  {%- assign displayed = '' -%}
                  {%- assign idx = 0 -%}
                  {%- for option_item in options_array -%}
                    {%- assign idx = idx | plus: 1 -%}
                    {%- assign option_vals = option_item | split: '|' -%}
                    <!--optionjson {{ option_vals | json }} -->
                    {%- assign value = option_vals[2] -%}
                    {%- assign label = option_vals[1] -%}
                    {%- assign option_tag = option_vals[0] -%}
                    {%- assign displayed = displayed | append: ':' | append: option_tag -%}
                    {%- assign variant_available = false -%}
                    {%- if product.tags contains option_tag -%}{%-comment-%}if available_variants contains value{%-endcomment-%}
                      {%- assign variant_available = true -%}
                    {%- endif -%}
                    <li class="HorizontalList__Item">
                      <input 
                        id="option-{{ section.id }}-{{ forloop.parentloop.index0 }}-{{ forloop.index0 }}" 
                        class="SizeSwatch__Radio {% unless variant_available %}Disabled{% endunless %} tag-{{ option_tag }}"
                        type="radio" 
                        name="option-{{ forloop.parentloop.index0 }}" 
                        value="{{ value | escape }}" 
                        {% if value == option.selected_value %}checked="checked"{% endif %}
                        {% unless product.tags contains option_tag %}disabled="disabled"{% endunless %}
                        data-option-position="{{ option.position }}"
                      >
                      <label for="option-{{ section.id }}-{{ forloop.parentloop.index0 }}-{{ forloop.index0 }}" class="SizeSwatch">{{ option_vals[1] }}</label>
                    </li>
                  {%- endfor -%}
                  {%- assign displayed = displayed | split: ':' -%}
                  {%- for tag in product.tags -%}
                    {%- if tag contains 'sizes-pt-' -%}
                      {%- unless displayed contains tag -%}
                        {%- assign display_value = tag | replace: 'sizes-pt-','' -%}
                        <li class="HorizontalList__Item">
                          <input 
                            id="option-{{ section.id }}-{{ forloop.parentloop.index0 }}-{{ forloop.index0 | plus: idx }}" 
                            class="SizeSwatch__Radio tag-{{ tag }}"
                            type="radio" 
                            name="option-{{ forloop.parentloop.index0 }}" 
                            value="{{ display_value | upcase | escape }}" 
                            data-option-position="{{ option.position }}"
                          >
                          <label for="option-{{ section.id }}-{{ forloop.parentloop.index0 }}-{{ forloop.index0 | plus: idx  }}" class="SizeSwatch">{{ display_value | upcase }}</label>
                        </li>
                      {%- endunless -%}
                    {%- endif -%}
                    {%- assign idx = idx | plus: 1 -%}
                  {%- endfor -%}
                </ul>
              {%- elsif section.settings.selector_mode == 'block' and downcase_option != 'amount' -%}
                <ul class="SizeSwatchList HorizontalList HorizontalList--spacingTight">
                  {%- for value in option.values -%}
                    <li class="HorizontalList__Item">
                      <input id="option-{{ section.id }}-{{ forloop.parentloop.index0 }}-{{ forloop.index0 }}" class="SizeSwatch__Radio" type="radio" name="option-{{ forloop.parentloop.index0 }}" value="{{ value | escape }}" {% if value == option.selected_value %}checked="checked"{% endif %} data-option-position="{{ option.position }}">
                      <label for="option-{{ section.id }}-{{ forloop.parentloop.index0 }}-{{ forloop.index0 }}" class="SizeSwatch">{{ value }}</label>
                    </li>
                  {%- endfor -%}
                </ul>
              {%- else -%}
                <button type="button" class="ProductForm__Item option-{{downcase_option}}" aria-expanded="false" aria-controls="{{ popover_id }}">
                  <span class="ProductForm__OptionName">{% unless show_option_label %}{{ option.name }}: {% endunless %}<span class="ProductForm__SelectedValue">{{ option.selected_value }}</span></span>
                  {%- include 'icon' with 'select-arrow' -%}
                </button>

                {%- capture popover_html -%}
                  {%- if color_label contains downcase_option and section.settings.show_color_carousel -%}
                    {%- for value in option.values -%}
                      {%- if value == option.selected_value -%}
                        {%- assign initial_image_index = forloop.index0 -%}
                        {%- break -%}
                      {%- endif -%}
                    {%- endfor -%}

                    {%- capture flickity_options -%}
                    {
                      "prevNextButtons": true,
                      "pageDots": true,
                      "initialIndex": {{ initial_image_index }},
                      "arrowShape": {"x0": 20, "x1": 60, "y1": 40, "x2": 60, "y2": 35, "x3": 25}
                    }
                    {%- endcapture -%}

                    <div id="{{ popover_id }}" class="VariantSelector" aria-hidden="true">
                      {%- capture option_index -%}option{{ option.position }}{%- endcapture -%}

                      <div class="VariantSelector__Carousel Carousel" data-flickity-config='{{ flickity_options }}'>
                        {%- for value in option.values -%}
                          {%- for variant in product.variants -%}
                            {%- if variant[option_index] == value -%}
                              {%- assign variant_image = variant.image | default: product.featured_image -%}
                              {%- break -%}
                            {%- endif -%}
                          {%- endfor -%}

                          <div class="VariantSelector__Item Carousel__Cell {% if value == option.selected_value %}is-selected{% endif %}"
                              data-background-color="{{ value | split: ' ' | last | handle }}"
                              data-background-image="{{ value | handle | append: '.png' | asset_url }}"
                              data-option-position="{{ option.position }}"
                              data-option-value="{{ value | escape }}">
                            <div class="VariantSelector__ImageWrapper AspectRatio AspectRatio--withFallback" style="max-width: {{ variant_image.width }}px; padding-bottom: {{ 100.0 | divided_by: variant_image.aspect_ratio }}%; --aspect-ratio: {{ variant_image.aspect_ratio }}">
                              {%- include 'image-size', sizes: '200,400,600,800', image: variant_image -%}
                              {%- assign image_url = variant_image | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

                              <img class="VariantSelector__Image Image--lazyLoad Image--fadeIn" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" alt="{{ variant_image.alt | escape }}">
                              <span class="Image__Loader"></span>
                            </div>
                          </div>
                        {%- endfor -%}
                      </div>

                      <div class="VariantSelector__Info">
                        <div class="VariantSelector__ChoiceList">
                          {%- for value in option.values -%}
                            {%- assign min_price_for_variant = product.price_max -%}

                            {%- for variant in product.variants -%}
                              {%- if variant[option_index] == value -%}
                                {%- assign min_price_for_variant = min_price_for_variant | at_most: variant.price -%}
                              {%- endif -%}
                            {%- endfor -%}

                            <div class="VariantSelector__Choice {% if value == option.selected_value %}is-selected{% endif %}">
                              <div class="VariantSelector__ChoiceColor">
                                {%- assign downcase_value = value | downcase -%}

                                {%- assign color_swatch_name = value | handle | append: '.png' -%}
                                {%- assign color_swatch_image = images[color_swatch_name] -%}

                                <span class="VariantSelector__ColorSwatch {% if downcase_value == 'white' %}VariantSelector__ColorSwatch--white{% endif %}" style="background-color: {{ value | replace: ' ', '' | downcase }}; {% if color_swatch_image != blank %}background-image: url({{ color_swatch_image | img_url: '64x64' }}){% endif %}"></span>
                                <span class="VariantSelector__ChoiceValue">{{ value }}</span>
                              </div>

                              <div class="VariantSelector__ChoicePrice">
                                {%- if available_prices_for_option_value.size > 1 -%}
                                  {%- capture formatted_min_price -%}<span data-money-convertible>{{ min_price_for_variant | money_without_trailing_zeros }}</span>{%- endcapture -%}
                                  <span class="Heading Text--subdued">{{ 'product.form.from_price_html' | t: min_price: formatted_min_price }}</span>
                                {%- else -%}
                                  <span class="Heading Text--subdued" data-money-convertible>{{ min_price_for_variant | money_without_trailing_zeros }}</span>
                                {%- endif -%}
                              </div>
                            </div>
                          {%- endfor -%}
                        </div>

                        <button type="button" class="VariantSelector__Button Button Button--primary Button--full" data-action="select-variant">{{- 'product.form.select_model' | t -}}</button>
                      </div>
                    </div>
                  {%- else -%}
                    <div id="{{ popover_id }}" class="OptionSelector Popover Popover--withMinWidth option-{{downcase_option}}" aria-hidden="true">
                      <header class="Popover__Header">
                        <button type="button" class="Popover__Close Icon-Wrapper--clickable" data-action="close-popover">{% include 'icon' with 'close' %}</button>
                        <span class="Popover__Title h3">{{ option.name | escape }}</span>
                      </header>

                      <div class="Popover__Content">
                        <div class="Popover__ValueList" data-scrollable>
                          {%- for value in option.values -%}
                            <button type="button" class="Popover__Value {% if value == option.selected_value %}is-selected{% endif %} Link Link--primary h4"
                                    data-value="{{ value | escape }}"
                                    data-option-position="{{ option.position }}"
                                    data-action="select-value">
                              {{- value | escape -}}
                            </button>
                          {%- endfor -%}
                        </div>

                        {%- assign size_chart_page = pages['size-chart'] -%}

                        {%- if show_option_label == false and size_label contains downcase_option and size_chart_page != empty -%}
                          <button type="button" class="Popover__FooterHelp Link Link--primary Text--subdued h4" data-action="open-modal" aria-controls="modal-{{ size_chart_page.handle }}">
                            {{- 'product.form.size_chart' | t -}}
                          </button>
                        {%- endif -%}
                      </div>
                    </div>
                  {%- endif -%}
                {%- endcapture -%}

                {%- assign product_popovers = product_popovers | append: popover_html -%}
              {%- endif -%}
            </div>
            {%- endunless -%}
        {%- endfor -%}
      </div>

      <div class="no-js ProductForm__Option">
        <div class="Select Select--primary">
          {%- include 'icon' with 'select-arrow' -%}

          <select id="product-select-{{ product.id }}" name="id" title="Variant">
            {%- for variant in product.variants -%}
              <option {% if variant == selected_variant %}selected="selected"{% endif %} {% unless variant.available %}disabled="disabled"{% endunless %} value="{{ variant.id }}" data-sku="{{ variant.sku }}">{{ variant.title }} - <span class="money" data-product-id="{{ product.id }}">{{ variant.price | money }}</span></option>
            {%- endfor -%}
          </select>
        </div>
      </div>
    {%- else -%}
      <input type="hidden" name="id" data-sku="{{ selected_variant.sku }}" value="{{ selected_variant.id }}">
    {%- endunless -%}

    {%- if product.vendor == 'Custom' or product.vendor == 'Hecho Para Ti' -%}
      <div class="ProductForm__Option CustomSizes option-size">
        <ul class="SizeSwatchList SizeSelector HorizontalList">
          {%- capture options_list -%}
              sizes-pt-extra-small|XS|Extra Small::sizes-pt-small|S|Small::sizes-pt-medium|M|Medium::sizes-pt-large|L|Large
          {%- endcapture -%}
          {%- assign options_array = options_list | split: '::' -%}

          {%- for option_item in options_array -%}
            {%- assign option_vals = option_item | split: '|' -%}
            {%- assign value = option_vals[2] -%}
            {%- assign label = option_vals[1] -%}
            {%- assign option_tag = option_vals[0] -%}
            <li class="HorizontalList__Item">
              <label for="option-{{ section.id }}-{{ forloop.parentloop.index0 }}-{{ forloop.index0 }}" class="SizeSwatch">{{ option_vals[1] }}</label>
            </li>
          {%- endfor -%}
        </ul>
      </div>
    {%- endif -%}

    {%- if section.settings.show_quantity_selector -%}
      {%- if show_option_label -%}
        <span class="ProductForm__Label Label__Quantity">{{ 'product.form.quantity' | t }}:</span>
      {%- endif -%}

      <div class="ProductForm__QuantitySelector">
        <div class="QuantitySelector QuantitySelector--large">
          {%- assign quantity_minus_one = line_item.quantity | minus: 1 -%}

          <span class="QuantitySelector__Button Link Link--secondary" data-action="decrease-quantity">{% include 'icon' with 'minus' %}</span>
          <input type="number" class="QuantitySelector__CurrentQuantity" pattern="[0-9]*" name="quantity" value="1">
          <span class="QuantitySelector__Button Link Link--secondary" data-action="increase-quantity">{% include 'icon' with 'plus' %}</span>
        </div>
      </div>
    {%- else -%}
      <input type="hidden" name="quantity" value="1">
    {%- endif -%}

    {%- if section.settings.show_inventory_quantity -%}
      {%- assign hide_inventory_quantity_by_default = false -%}
      
      {%- if selected_variant.inventory_management == blank or selected_variant.inventory_quantity <= 0 -%}
        {%- assign hide_inventory_quantity_by_default = true -%}
      {%- endif -%}

      {%- if section.settings.inventory_quantity_threshold != 0 and selected_variant.inventory_quantity > section.settings.inventory_quantity_threshold -%}
        {%- assign hide_inventory_quantity_by_default = true -%}
      {%- endif -%}

      <p class="ProductForm__Inventory Text--subdued" {% if hide_inventory_quantity_by_default %}style="display: none"{% endif %}>
        {%- if section.settings.inventory_quantity_threshold == 0 -%}
          {{- 'product.form.inventory_quantity_count' | t: count: selected_variant.inventory_quantity -}}
        {%- else -%}
          {{- 'product.form.low_inventory_quantity_count' | t: count: selected_variant.inventory_quantity -}}
        {%- endif -%}
      </p>
    {%- endif -%}
  </div>

  {%- comment -%}
  --------------------------------------------------------------------------------------------------------------------
  ADD TO CART BUTTON
  --------------------------------------------------------------------------------------------------------------------
  {%- endcomment -%}

  <div class="ProductForm__AddTo">
    <button type="submit" class="ProductForm__AddToCart Button {% if selected_variant.available and section.settings.show_payment_button == false %}Button--primary{% else %}Button--secondary Button--disabled{% endif %}" {% if selected_variant.available %}data-action="add-to-cart"{% else %}disabled="disabled"{% endif %}>
      {%- if selected_variant.available -%}
        <span>{% if product.template_suffix == 'pre-order' or product.tags contains 'preorder' %}{{ 'product.form.pre_order' | t }}{% else %}{{ 'product.form.add_to_cart' | t }}{% endif %}</span>

        {%- if section.settings.show_price_in_button or template contains 'quickview' -%}
          <span class="Button__SeparatorDot"></span>
          <span class="PriceWrapper"><span data-money-convertible class="CurrentPrice"><span class="money" data-product-id="{{ product.id }}">{{ selected_variant.price | money_without_trailing_zeros }}</span></span></span>
        {%- endif -%}
      {%- else -%}
        {{- 'product.form.sold_out' | t -}}
      {%- endif -%}
    </button>

    {%- if section.settings.show_payment_button and product.template_suffix != 'pre-order' -%}
      {{ form | payment_button }}
    {%- endif -%}
  </div>
{%- endform -%} 
{% unless template contains 'quickview' %}<span style="text-align:left; display:block;    "  class="drophint-link"></span>{% endunless %}

{%- if size_chart_page != empty -%}
  {%- comment -%}If we have a size chart we capture the modal content (it must be displayed outside the form for proper positioning){%- endcomment -%}

  {%- capture product_modals -%}
    <div id="modal-{{ size_chart_page.handle }}" class="Modal Modal--dark Modal--fullScreen Modal--pageContent" aria-hidden="true" role="dialog" data-scrollable>
      <header class="Modal__Header">
        <h2 class="Modal__Title h2">{{ size_chart_page.title }}</h2>
      </header>

      <div class="Modal__Content Rte">
        <div class="Container Container--extraNarrow">
          {{- size_chart_page.content -}}
        </div>
      </div>

      <button class="Modal__Close RoundButton RoundButton--large" data-animate-bottom data-action="close-modal">{% include 'icon' with 'close' %}</button>
    </div>
  {%- endcapture -%}
{%- endif -%}

{%- if section.settings.show_payment_button and selected_variant.available == false -%}
  <style>
    #shopify-section-{{ section.id }} .shopify-payment-button {
      display: none;
    }
  </style>
{%- endif -%}

{% comment %}
------------------------------------------------------------------------------
Product Data. This must be outputted for all products (including home page).

IMPORTANT: THIS CODE IS VITAL. DO NOT EDIT IT NOT REMOVE IT. MAKE SURE TO KEEP
THE EXACT SAME ATTRIBUTES.
------------------------------------------------------------------------------
{% endcomment %}

<script type="application/json" data-product-json>
  {
    "product": {{ product | json }},
    "selected_variant_id": {{ selected_variant.id }}
    {%- if section.settings.show_inventory_quantity -%}
      ,"inventories": {
        {%- for variant in product.variants -%}
          {%- assign inventory_message = '' -%}

          {%- if section.settings.inventory_quantity_threshold == 0 -%}
            {%- capture inventory_message -%}{{- 'product.form.inventory_quantity_count' | t: count: variant.inventory_quantity -}}{%- endcapture -%}
          {%- else -%}
            {%- capture inventory_message -%}{{- 'product.form.low_inventory_quantity_count' | t: count: variant.inventory_quantity -}}{%- endcapture -%}
          {%- endif -%}

          "{{ variant.id }}": {
            "inventory_management": {{ variant.inventory_management | json }},
            "inventory_policy": {{ variant.inventory_policy | json }},
            "inventory_quantity": {{ variant.inventory_quantity | json }},
            "inventory_message": {{ inventory_message | json }}
          }{% unless forloop.last %},{% endunless %}
        {%- endfor -%}
      }
    {%- endif -%}
  }
</script>


{% unless selected_variant.available %}
{% if product.tags contains 'bis' %}
<script type="text/javascript" src="https://a.klaviyo.com/media/js/onsite/onsite.js"></script>
<script>
var klaviyo = klaviyo || [];
    klaviyo.init({
      account: "LqVDD3",
      list: "WurBPZ",
      platform: "shopify"
    });
    klaviyo.enable("backinstock",{ 
    trigger: {
      product_page_text: "Notify Me When Available",
      product_page_class: "Button Button--primary Button--full",
      product_page_text_align: "center",
      product_page_margin: "0px",
      replace_anchor: false
    },
    modal: {
     headline: "{product_name}",
     body_content: "Register to receive a notification when this item comes back in stock.",
     email_field_label: "Email",
     button_label: "NOTIFY ME WHEN AVAILABLE",
     subscription_success_label: "You're in! We'll let you know when it's back.",
     footer_content: '',
     additional_styles: "@import url('https://fonts.googleapis.com/css?family=Helvetica+Neue');@import url('https://use.typekit.net/gld2vmc.css');.btn{font-weight:normal;}",
     drop_background_color: "#000",
     background_color: "#fff",
     text_color: "#222",
     button_text_color: "#fff",
     button_background_color: "#5384e1",
     close_button_color: "#ccc",
     error_background_color: "#fcd6d7",
     error_text_color: "#C72E2F",
     success_background_color: "#d3efcd",
     success_text_color: "#1B9500",
     font_family: '"sofia-pro","Helvetica Neue","Helvetica",sans-serif',
    }
  });
</script>
<style>
.drophint-link { display: none!important; }
.ProductForm__Error.Alert { display: none; }
</style>
{% endif %}
{% endunless %}